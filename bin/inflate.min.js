/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
(function() {function k(d){throw d;}var m=void 0;var n=[],o;for(o=0;288>o;o++)switch(!0){case 143>=o:n.push([o-0+48,8]);break;case 255>=o:n.push([o-144+400,9]);break;case 279>=o:n.push([o-256+0,7]);break;case 287>=o:n.push([o-280+192,8]);break;default:k("invalid literal: "+o)}
(function(){function d(a){switch(!0){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,
a-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:k("invalid length: "+a)}}var g=[],c;for(c=3;258>=c;c++)g[c]=d(c);return g})();var q=new Uint16Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),r=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),s=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,3,4,5,5,5,5,0,0,0]),t=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),u=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),v=new Uint8Array(288),
w,x;w=0;for(x=v.length;w<x;++w)v[w]=143>=w?8:255>=w?9:279>=w?7:8;var z=y(v),A=new Uint8Array(30),B,C;B=0;for(C=A.length;B<C;++B)A[B]=5;var D=y(A);function E(d,g){for(var c=d.c,a=d.d,e=d.input,f=d.b,b;a<g;)b=e[f++],b===m&&k(Error("input buffer is broken")),c|=b<<a,a+=8;b=c&(1<<g)-1;d.c=c>>>g;d.d=a-g;d.b=f;return b}
function F(d,g){for(var c=d.c,a=d.d,e=d.input,f=d.b,b=g[0],h=g[1],i;a<h;)i=e[f++],i===m&&k(Error("input buffer is broken")),c|=i<<a,a+=8;e=b[c&(1<<h)-1];b=e>>>16;d.c=c>>b;d.d=a-b;d.b=f;return e&65535}
function G(d){function g(a,d,b){for(var c,e,f=0,f=0;f<a;)switch(c=F(this,d),c){case 16:for(c=3+E(this,2);c--;)b[f++]=e;break;case 17:for(c=3+E(this,3);c--;)b[f++]=0;e=0;break;case 18:for(c=11+E(this,7);c--;)b[f++]=0;e=0;break;default:e=b[f++]=c}return b}var c=E(d,5)+257,a=E(d,5)+1,e=E(d,4)+4,f=new Uint8Array(q.length),b;for(b=b=0;b<e;++b)f[q[b]]=E(d,3);e=y(f);f=new Uint8Array(c);b=new Uint8Array(a);H(d,y(g.call(d,c,e,f)),y(g.call(d,a,e,b)))}
function H(d,g,c){for(var a=d.e,e=d.a,f=a.length-258,b,h,i;256!==(b=F(d,g));)if(256>b)e>=f&&(d.a=e,e=I(d)),a[e++]=b;else{b-=257;i=r[b];0<s[b]&&(i+=E(d,s[b]));b=F(d,c);h=t[b];0<u[b]&&(h+=E(d,u[b]));e>=f&&(d.a=e,e=I(d));for(;i--;)a[e]=a[e++-h]}d.a=e}function I(d){var g=new Uint8Array(d.a-32768),c=d.a-32768,a,e,f=d.e;a=0;for(e=g.length;a<e;++a)g[a]=f[a+32768];d.f.push(g);d.g+=g.length;for(a=0;32768>a;++a)f[a]=f[c+a];d.a=32768;return d.a}
function y(d){var g=d.length,c=0,a,e,f,b,h,i,j,l,p;for(l=0;l<g;++l)d[l]>c&&(c=d[l]);a=1<<c;e=new Uint32Array(a);f=1;b=0;for(h=2;f<=c;){for(l=0;l<g;++l)if(d[l]===f){i=0;j=b;for(p=0;p<f;++p)i=i<<1|j&1,j>>=1;for(p=i;p<a;p+=h)e[p]=f<<16|l;++b}++f;b<<=1;h<<=1}return[e,c]}
function J(d,g){this.f=[];this.i=g?g:32768;this.d=this.c=this.b=this.g=0;this.input=d instanceof Array?new Uint8Array(d):d;this.e=new Uint8Array(32768+this.i+258);this.a=32768;this.h=!1;var c=d[this.b++],a=d[this.b++];switch(c&15){case K:this.method=K;break;default:k(Error("unsupported compression method"))}0!==((c<<8)+a)%31&&k(Error("invalid fcheck flag:"+((c<<8)+a)%31));for(a&32&&k(Error("fdict flag is not supported"));!this.h;)switch(c=E(this,3),c&1&&(this.h=!0),c>>>=1,c){case 0:var c=this.input,
a=this.b,e=this.e,f=this.a,b=m,h=m,i=m,j=e.length,b=m;this.d=this.c=0;b=c[a++];b===m&&k(Error("invalid uncompressed block header: LEN (first byte)"));h=b;b=c[a++];b===m&&k(Error("invalid uncompressed block header: LEN (second byte)"));h|=b<<8;b=c[a++];b===m&&k(Error("invalid uncompressed block header: NLEN (first byte)"));i=b;b=c[a++];b===m&&k(Error("invalid uncompressed block header: NLEN (second byte)"));i|=b<<8;h===~i&&k(Error("invalid uncompressed block header: length verify"));for(a+h>c.length&&
k(Error("input buffer is broken"));f+h>=j;){b=j-f;for(h-=b;b--;)e[f++]=c[a++];this.a=f;f=I(this)}for(;h--;)e[f++]=c[a++];this.b=a;this.a=f;break;case 1:H(this,z,D);break;case 2:G(this);break;default:k(Error("unknown BTYPE: "+c))}var c=0,a=this.e,e=this.f,h=new Uint8Array(this.g+(this.a-32768)),l;if(0===e.length)c=this.e.subarray(32768,this.a);else{j=0;for(b=e.length;j<b;++j){f=e[j];i=0;for(l=f.length;i<l;++i)h[c++]=f[i]}j=32768;for(b=this.a;j<b;++j)h[c++]=a[j];this.f=[];c=this.buffer=h}return c}
var L=["Zlib","Inflate"],M=this;!(L[0]in M)&&M.execScript&&M.execScript("var "+L[0]);for(var N;L.length&&(N=L.shift());)!L.length&&J!==m?M[N]=J:M=M[N]?M[N]:M[N]={};var K=8;})();
